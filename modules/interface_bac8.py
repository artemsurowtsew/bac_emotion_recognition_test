# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Artem\PycharmProjects\pythonProject\modules\interface_bac5.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_EmotionRecognition(object):
    def setupUi(self, EmotionRecognition):
        EmotionRecognition.setObjectName("EmotionRecognition")
        EmotionRecognition.resize(1082, 887)
        EmotionRecognition.setStyleSheet("QWidget {\n"
"    background-color: #808080; /* Сірий колір фону */\n"
"    color: #FFA500; /* Оранжевий колір тексту */\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: #FFA500; /* Оранжевий колір фону кнопки */\n"
"    color: #808080; /* Сірий колір тексту кнопки */\n"
"}\n"
"\n"
"QLineEdit {\n"
"    background-color: #D3D3D3; /* Світло-сірий колір фону поля введення */\n"
"    color: #FFA500; /* Оранжевий колір тексту поля введення */\n"
"}")
        self.centralwidget = QtWidgets.QWidget(EmotionRecognition)
        self.centralwidget.setObjectName("centralwidget")
        self.screen_thread = QtWidgets.QLabel(self.centralwidget)
        self.screen_thread.setGeometry(QtCore.QRect(20, 0, 600, 480))
        self.screen_thread.setMinimumSize(QtCore.QSize(600, 400))
        self.screen_thread.setMaximumSize(QtCore.QSize(640, 480))
        self.screen_thread.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.screen_thread.setText("")
        self.screen_thread.setObjectName("screen_thread")
        self.emotions_screen_reg = QtWidgets.QTextEdit(self.centralwidget)
        self.emotions_screen_reg.setGeometry(QtCore.QRect(20, 760, 760, 80))
        self.emotions_screen_reg.setMinimumSize(QtCore.QSize(760, 20))
        self.emotions_screen_reg.setMaximumSize(QtCore.QSize(211, 311))
        self.emotions_screen_reg.setObjectName("emotions_screen_reg")
        self.labelscreen1 = QtWidgets.QLabel(self.centralwidget)
        self.labelscreen1.setGeometry(QtCore.QRect(40, 730, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.labelscreen1.setFont(font)
        self.labelscreen1.setObjectName("labelscreen1")
        self.load_screen_button = QtWidgets.QPushButton(self.centralwidget)
        self.load_screen_button.setGeometry(QtCore.QRect(800, 770, 200, 70))
        self.load_screen_button.setObjectName("load_screen_button")
        self.camera_thread = QtWidgets.QLabel(self.centralwidget)
        self.camera_thread.setGeometry(QtCore.QRect(680, 80, 380, 400))
        self.camera_thread.setMinimumSize(QtCore.QSize(100, 100))
        self.camera_thread.setMaximumSize(QtCore.QSize(640, 480))
        self.camera_thread.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.camera_thread.setText("")
        self.camera_thread.setObjectName("camera_thread")
        EmotionRecognition.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(EmotionRecognition)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1082, 22))
        self.menubar.setObjectName("menubar")
        EmotionRecognition.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(EmotionRecognition)
        self.statusbar.setObjectName("statusbar")
        EmotionRecognition.setStatusBar(self.statusbar)

        self.retranslateUi(EmotionRecognition)
        QtCore.QMetaObject.connectSlotsByName(EmotionRecognition)

    def retranslateUi(self, EmotionRecognition):
        _translate = QtCore.QCoreApplication.translate
        EmotionRecognition.setWindowTitle(_translate("EmotionRecognition", "MainWindow"))
        self.labelscreen1.setText(_translate("EmotionRecognition", "Emotions Detected"))
        self.load_screen_button.setText(_translate("EmotionRecognition", "Почати трансляцію"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EmotionRecognition = QtWidgets.QMainWindow()
    ui = Ui_EmotionRecognition()
    ui.setupUi(EmotionRecognition)
    EmotionRecognition.show()
    sys.exit(app.exec_())
